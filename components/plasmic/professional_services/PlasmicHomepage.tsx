// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9BzSYZY1UKe9wRcv3hPs4L
// Component: MCPTQ9QYq6xzD
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: I_MYqYFFXiVox/component
import Button from "../../Button"; // plasmic-import: XcSNCNX4wrmaW/component
import Testimonial from "../../Testimonial"; // plasmic-import: EoGnUUMRd2cLLQ/component
import CtaBottom from "../../CtaBottom"; // plasmic-import: UwZsXLsWnxBA8-/component
import Footer from "../../Footer"; // plasmic-import: 4zVNimxrflLuq/component

import { useScreenVariants as useScreenVariantsx3WpyNuTSdyZz6 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: X3WpyNuTSdyZZ6/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_professional_services.module.css"; // plasmic-import: 9BzSYZY1UKe9wRcv3hPs4L/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: MCPTQ9QYq6xzD/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: xUJrFddW_IqdU/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: vbQVvDQQi04RB/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: sUU13i7JRzf6K/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: SmMoLHAr0d31l/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: HZ4EWto2ra24I/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  hero?: p.Flex<"div">;
  container7?: p.Flex<"div">;
  row3?: p.Flex<"div">;
  info?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  fig?: p.Flex<"div">;
  companiesSection?: p.Flex<"div">;
  container2?: p.Flex<"div">;
  ctaBottom?: p.Flex<typeof CtaBottom>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomepageProps {}

export const defaultHomepage__Args: Partial<PlasmicHomepage__ArgsType> = {};

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultHomepage__Args, props.args);
  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsx3WpyNuTSdyZz6()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div
              data-plasmic-name={"container7"}
              data-plasmic-override={overrides.container7}
              className={classNames(projectcss.all, sty.container7)}
            >
              <div
                data-plasmic-name={"row3"}
                data-plasmic-override={overrides.row3}
                className={classNames(projectcss.all, sty.row3)}
              >
                <div
                  data-plasmic-name={"info"}
                  data-plasmic-override={overrides.info}
                  className={classNames(projectcss.all, sty.info)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__r8ZXk)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"Choose us for marketing photography"}
                    </h1>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__baagc
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt."
                      }
                    </div>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__db6Am
                      )}
                      color={"blackCoffee" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nwuz7
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Get In touch"
                          : "Get In touch"}
                      </div>
                    </Button>
                  </p.Stack>
                </div>

                <div
                  data-plasmic-name={"fig"}
                  data-plasmic-override={overrides.fig}
                  className={classNames(projectcss.all, sty.fig)}
                />
              </div>
            </div>
          </div>

          <section className={classNames(projectcss.all, sty.section__yhl7O)}>
            <div className={classNames(projectcss.all, sty.freeBox__pTcDb)}>
              <div className={classNames(projectcss.all, sty.freeBox__tHmR)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jSxdr)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__moDG
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Why Choose Us"
                        : "Why choose us"}
                    </h2>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns__j50PQ)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__pBnav
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1HvJz
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rwVhM
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__elgKx
                              )}
                              role={"img"}
                            />
                          </div>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jyJmo
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__oV0On
                              )}
                            >
                              {"Welcoming  trusted"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__p7LfZ
                              )}
                            >
                              {
                                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__a8O6M
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8Nzb1
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jsRyN
                            )}
                          >
                            <Icon13Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bk9DA
                              )}
                              role={"img"}
                            />
                          </div>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__uRjsd
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__cf0Ti
                              )}
                            >
                              {"Tested and secure"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lf7MC
                              )}
                            >
                              {
                                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___4YEag
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mlEl3
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yJiBs
                            )}
                          >
                            <Icon10Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__al4R
                              )}
                              role={"img"}
                            />
                          </div>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__xeLmY
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__lKxoo
                              )}
                            >
                              {"Mindful notifications"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jbF4V
                              )}
                            >
                              {
                                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__ezEzW
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lYjMh
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___65PPk
                            )}
                          >
                            <Icon11Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__p2A8
                              )}
                              role={"img"}
                            />
                          </div>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eyyhO
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__poFkH
                              )}
                            >
                              {"Real-time results"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__hbVWu
                              )}
                            >
                              {
                                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>
                    </p.Stack>
                  </p.Stack>
                ) : null}
              </div>
            </div>
          </section>

          <section className={classNames(projectcss.all, sty.section__cUtn)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__l2NPk)}
            >
              <div className={classNames(projectcss.all, sty.column__uZi3V)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hgHtJ)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/professional_services/images/girls18285391920Jpg.jpeg",
                    fullWidth: 1920,
                    fullHeight: 1280,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__o5M4O)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__d8BtP)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__adxQ
                    )}
                  >
                    {"The standard used since"}
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mjLuE
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                    }
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lYjPc
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__tIno)}
                    color={"blackCoffee" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dGvo0
                      )}
                    >
                      {"About Us"}
                    </div>
                  </Button>
                </p.Stack>
              </div>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__jo2Vc)}>
              <div className={classNames(projectcss.all, sty.freeBox__t9PAm)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__f5Fh6)}
                  />
                ) : null}
              </div>
            </div>
          </section>

          <section className={classNames(projectcss.all, sty.section__p8ABz)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__j1Nxv)}
            >
              <div className={classNames(projectcss.all, sty.column__exVeO)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___3Y7D0)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__cGuFe
                    )}
                  >
                    {"The standard used since"}
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h9EOv
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                    }
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jfox
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__qD0L5)}
                    color={"blackCoffee" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vwKy
                      )}
                    >
                      {"Contact Us"}
                    </div>
                  </Button>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__uzFvl)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mr6Y2)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("100%" as const)
                      : ("100%" as const)
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100%" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/professional_services/images/people31046351920Jpg.jpeg",
                    fullWidth: 1920,
                    fullHeight: 1281,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__qrjUa)}>
              <div className={classNames(projectcss.all, sty.freeBox__tyAf)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lCsXw)}
                  />
                ) : null}
              </div>
            </div>
          </section>

          <div className={classNames(projectcss.all, sty.freeBox__gz2QE)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__idhok)}
            >
              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__aSs8W)}
                slot={
                  <React.Fragment>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__bI1Xa)}
                      displayHeight={"64px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"64px" as const}
                      src={{
                        src: "/plasmic/professional_services/images/woman32879561920Jpg.jpeg",
                        fullWidth: 1920,
                        fullHeight: 1280,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7A2Kg
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oUlQg
                        )}
                      >
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__v1Brc
                          )}
                        >
                          {"Lorem doi"}
                        </h5>
                      </div>
                    </p.Stack>
                  </React.Fragment>
                }
              />

              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__bkdd3)}
                slot={
                  <React.Fragment>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__cqNg)}
                      displayHeight={"64px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"64px" as const}
                      src={{
                        src: "/plasmic/professional_services/images/people31046351920Jpg.jpeg",
                        fullWidth: 1920,
                        fullHeight: 1281,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__sgP0U)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gLzge
                        )}
                      >
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__igSa2
                          )}
                        >
                          {"Lorem doi"}
                        </h5>
                      </div>
                    </p.Stack>
                  </React.Fragment>
                }
              />

              <Testimonial
                className={classNames(
                  "__wab_instance",
                  sty.testimonial___6Imp3
                )}
                slot={
                  <React.Fragment>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__zhWgk)}
                      displayHeight={"64px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"64px" as const}
                      src={{
                        src: "/plasmic/professional_services/images/girls18285391920Jpg.jpeg",
                        fullWidth: 1920,
                        fullHeight: 1280,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__z4Tx3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__iz74W
                        )}
                      >
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__vPwle
                          )}
                        >
                          {"Lorem doi"}
                        </h5>
                      </div>
                    </p.Stack>
                  </React.Fragment>
                }
              />
            </p.Stack>
          </div>

          <div
            data-plasmic-name={"companiesSection"}
            data-plasmic-override={overrides.companiesSection}
            className={classNames(projectcss.all, sty.companiesSection)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"container2"}
              data-plasmic-override={overrides.container2}
              hasGap={true}
              className={classNames(projectcss.all, sty.container2)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__t2FPm
                )}
              >
                {"We work with local businesses"}
              </h2>

              <div className={classNames(projectcss.all, sty.freeBox__kEmf)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ip64E)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__edQws)}
                    displayHeight={"48px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={
                      "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-strapi.svg" as const
                    }
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__a81Xd)}
                    displayHeight={"48px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={
                      "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-segment.svg" as const
                    }
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__pdDjm)}
                    displayHeight={"48px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={
                      "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-xstate.svg" as const
                    }
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__hneF2)}
                    displayHeight={"48px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={
                      "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-mapbox.svg" as const
                    }
                  />
                </p.Stack>
              </div>
            </p.Stack>
          </div>

          <CtaBottom
            data-plasmic-name={"ctaBottom"}
            data-plasmic-override={overrides.ctaBottom}
            className={classNames("__wab_instance", sty.ctaBottom)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "hero",
    "container7",
    "row3",
    "info",
    "h1",
    "fig",
    "companiesSection",
    "container2",
    "ctaBottom",
    "footer"
  ],
  header: ["header"],
  hero: ["hero", "container7", "row3", "info", "h1", "fig"],
  container7: ["container7", "row3", "info", "h1", "fig"],
  row3: ["row3", "info", "h1", "fig"],
  info: ["info", "h1"],
  h1: ["h1"],
  fig: ["fig"],
  companiesSection: ["companiesSection", "container2"],
  container2: ["container2"],
  ctaBottom: ["ctaBottom"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  hero: "div";
  container7: "div";
  row3: "div";
  info: "div";
  h1: "h1";
  fig: "div";
  companiesSection: "div";
  container2: "div";
  ctaBottom: typeof CtaBottom;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    hero: makeNodeComponent("hero"),
    container7: makeNodeComponent("container7"),
    row3: makeNodeComponent("row3"),
    info: makeNodeComponent("info"),
    h1: makeNodeComponent("h1"),
    fig: makeNodeComponent("fig"),
    companiesSection: makeNodeComponent("companiesSection"),
    container2: makeNodeComponent("container2"),
    ctaBottom: makeNodeComponent("ctaBottom"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
