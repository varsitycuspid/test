// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9BzSYZY1UKe9wRcv3hPs4L
// Component: cbOT3Cr85MQ3PI
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: I_MYqYFFXiVox/component
import Testimonial from "../../Testimonial"; // plasmic-import: EoGnUUMRd2cLLQ/component
import CtaBottom from "../../CtaBottom"; // plasmic-import: UwZsXLsWnxBA8-/component
import Footer from "../../Footer"; // plasmic-import: 4zVNimxrflLuq/component

import { useScreenVariants as useScreenVariantsx3WpyNuTSdyZz6 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: X3WpyNuTSdyZZ6/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_professional_services.module.css"; // plasmic-import: 9BzSYZY1UKe9wRcv3hPs4L/projectcss
import sty from "./PlasmicStory.module.css"; // plasmic-import: cbOT3Cr85MQ3PI/css

import Icon16Icon from "./icons/PlasmicIcon__Icon16"; // plasmic-import: 87nN89RCxUiwCp/icon
import LoactionVectorsvgIcon from "./icons/PlasmicIcon__LoactionVectorsvg"; // plasmic-import: UaY-fa0qp1Hm6Y/icon
import PhoneVectorsvgIcon from "./icons/PlasmicIcon__PhoneVectorsvg"; // plasmic-import: d5ynWYo6wC3VOx/icon
import EmailVectorsvgIcon from "./icons/PlasmicIcon__EmailVectorsvg"; // plasmic-import: Qkfxs1onVexwkL/icon

export type PlasmicStory__VariantMembers = {};

export type PlasmicStory__VariantsArgs = {};
type VariantPropType = keyof PlasmicStory__VariantsArgs;
export const PlasmicStory__VariantProps = new Array<VariantPropType>();

export type PlasmicStory__ArgsType = {};
type ArgPropType = keyof PlasmicStory__ArgsType;
export const PlasmicStory__ArgProps = new Array<ArgPropType>();

export type PlasmicStory__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  pageBanerSection?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  section?: p.Flex<"section">;
  foreground?: p.Flex<"div">;
  h2?: p.Flex<"h2">;
  ctaBottom?: p.Flex<typeof CtaBottom>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultStoryProps {}

export const defaultStory__Args: Partial<PlasmicStory__ArgsType> = {};

function PlasmicStory__RenderFunc(props: {
  variants: PlasmicStory__VariantsArgs;
  args: PlasmicStory__ArgsType;
  overrides: PlasmicStory__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultStory__Args, props.args);
  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsx3WpyNuTSdyZz6()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"pageBanerSection"}
            data-plasmic-override={overrides.pageBanerSection}
            className={classNames(projectcss.all, sty.pageBanerSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___8YNmw)}>
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Story"}
              </h1>
            </div>
          </div>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__alogp)}>
              <div className={classNames(projectcss.all, sty.freeBox__pOmtP)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gFfPs)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"foreground"}
                      data-plasmic-override={overrides.foreground}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.foreground)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__smb4M
                        )}
                      >
                        <h2
                          data-plasmic-name={"h2"}
                          data-plasmic-override={overrides.h2}
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2
                          )}
                        >
                          {"Story heading"}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wmUcv
                          )}
                        >
                          {
                            "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies. Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi  arturient ultricies. Vitae sed sem a justo mauris potenti a primis vivamus justo  empor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies. Vitae sed sem a justo mauris potenti a primis vivamus justo  empor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                          }
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4L2Eg
                          )}
                        >
                          {
                            "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies. Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi  arturient ultricies. Vitae sed sem a justo mauris potenti a primis vivamus justo  empor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies. Vitae sed sem a justo mauris potenti a primis vivamus justo  empor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                          }
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__j0BgY
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uIRbd
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__ddA3Q
                            )}
                          >
                            {"Built on capability"}
                          </h3>

                          <Icon16Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__bYz8
                            )}
                            role={"img"}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lHysk
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3___3XEii
                            )}
                          >
                            {"Highly energetic"}
                          </h3>

                          <Icon16Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vbBbq
                            )}
                            role={"img"}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__erwlH
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__vmo4X
                            )}
                          >
                            {"100% transparency and accountability"}
                          </h3>

                          <Icon16Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__p8Gv8
                            )}
                            role={"img"}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jJaL6
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__la1Ey
                            )}
                          >
                            {"Refreshing clarity"}
                          </h3>

                          <Icon16Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lkaHz
                            )}
                            role={"img"}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__z2Gm2
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__cx6Ar
                            )}
                          >
                            {"Modern results"}
                          </h3>

                          <Icon16Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___58KGx
                            )}
                            role={"img"}
                          />
                        </div>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jYUiw
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__atRe
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yio0S
                              )}
                            >
                              <LoactionVectorsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__rpYAc
                                )}
                                role={"img"}
                              />
                            </div>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__o2R7U
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__cZI2
                                )}
                              >
                                {"121 state lorem state"}
                              </div>
                            </p.Stack>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__u0Y0R
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__cutw
                              )}
                            >
                              <PhoneVectorsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__vxHqU
                                )}
                                role={"img"}
                              />
                            </div>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__iW7Qu
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__r6Ma2
                                )}
                              >
                                {"888888885588"}
                              </div>
                            </p.Stack>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__glUbf
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__qriOo
                              )}
                            >
                              <EmailVectorsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kuEso
                                )}
                                role={"img"}
                              />
                            </div>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___8Kd0
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__fSjwE
                                )}
                              >
                                {"Info@gmail.com"}
                              </div>
                            </p.Stack>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                ) : null}
              </div>
            </div>
          </section>

          <div className={classNames(projectcss.all, sty.freeBox___4HhcJ)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___4FJcm)}
            >
              <Testimonial
                className={classNames(
                  "__wab_instance",
                  sty.testimonial___35Brg
                )}
                slot={
                  <React.Fragment>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___60Rn)}
                      displayHeight={"64px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"64px" as const}
                      src={{
                        src: "/plasmic/professional_services/images/woman32879561920Jpg.jpeg",
                        fullWidth: 1920,
                        fullHeight: 1280,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7A2Kg
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gzpvF
                        )}
                      >
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__lb71U
                          )}
                        >
                          {"Lorem doi"}
                        </h5>
                      </div>
                    </p.Stack>
                  </React.Fragment>
                }
              />

              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__zr56)}
                slot={
                  <React.Fragment>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__fDIc)}
                      displayHeight={"64px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"64px" as const}
                      src={{
                        src: "/plasmic/professional_services/images/people31046351920Jpg.jpeg",
                        fullWidth: 1920,
                        fullHeight: 1281,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__sgP0U)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2ThxQ
                        )}
                      >
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5___77CRg
                          )}
                        >
                          {"Lorem doi"}
                        </h5>
                      </div>
                    </p.Stack>
                  </React.Fragment>
                }
              />

              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__tSqSx)}
                slot={
                  <React.Fragment>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__tlSpU)}
                      displayHeight={"64px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"64px" as const}
                      src={{
                        src: "/plasmic/professional_services/images/girls18285391920Jpg.jpeg",
                        fullWidth: 1920,
                        fullHeight: 1280,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__z4Tx3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__kzvfh
                        )}
                      >
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__rg7I0
                          )}
                        >
                          {"Lorem doi"}
                        </h5>
                      </div>
                    </p.Stack>
                  </React.Fragment>
                }
              />
            </p.Stack>
          </div>

          <CtaBottom
            data-plasmic-name={"ctaBottom"}
            data-plasmic-override={overrides.ctaBottom}
            className={classNames("__wab_instance", sty.ctaBottom)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "pageBanerSection",
    "h1",
    "section",
    "foreground",
    "h2",
    "ctaBottom",
    "footer"
  ],
  header: ["header"],
  pageBanerSection: ["pageBanerSection", "h1"],
  h1: ["h1"],
  section: ["section", "foreground", "h2"],
  foreground: ["foreground", "h2"],
  h2: ["h2"],
  ctaBottom: ["ctaBottom"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  pageBanerSection: "div";
  h1: "h1";
  section: "section";
  foreground: "div";
  h2: "h2";
  ctaBottom: typeof CtaBottom;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicStory__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicStory__VariantsArgs;
    args?: PlasmicStory__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicStory__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicStory__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicStory__ArgProps,
      internalVariantPropNames: PlasmicStory__VariantProps
    });

    return PlasmicStory__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicStory";
  } else {
    func.displayName = `PlasmicStory.${nodeName}`;
  }
  return func;
}

export const PlasmicStory = Object.assign(
  // Top-level PlasmicStory renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageBanerSection: makeNodeComponent("pageBanerSection"),
    h1: makeNodeComponent("h1"),
    section: makeNodeComponent("section"),
    foreground: makeNodeComponent("foreground"),
    h2: makeNodeComponent("h2"),
    ctaBottom: makeNodeComponent("ctaBottom"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicStory
    internalVariantProps: PlasmicStory__VariantProps,
    internalArgProps: PlasmicStory__ArgProps
  }
);

export default PlasmicStory;
/* prettier-ignore-end */
