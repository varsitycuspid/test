// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9BzSYZY1UKe9wRcv3hPs4L
// Component: VK9bpqi0cSanF_
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: I_MYqYFFXiVox/component
import CaseStudiesWraper from "../../CaseStudiesWraper"; // plasmic-import: izD__6mnLwkIKc/component
import Button from "../../Button"; // plasmic-import: XcSNCNX4wrmaW/component
import CtaBottom from "../../CtaBottom"; // plasmic-import: UwZsXLsWnxBA8-/component
import Footer from "../../Footer"; // plasmic-import: 4zVNimxrflLuq/component

import { useScreenVariants as useScreenVariantsx3WpyNuTSdyZz6 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: X3WpyNuTSdyZZ6/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_professional_services.module.css"; // plasmic-import: 9BzSYZY1UKe9wRcv3hPs4L/projectcss
import sty from "./PlasmicStories.module.css"; // plasmic-import: VK9bpqi0cSanF_/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: xUJrFddW_IqdU/icon

export type PlasmicStories__VariantMembers = {};

export type PlasmicStories__VariantsArgs = {};
type VariantPropType = keyof PlasmicStories__VariantsArgs;
export const PlasmicStories__VariantProps = new Array<VariantPropType>();

export type PlasmicStories__ArgsType = {};
type ArgPropType = keyof PlasmicStories__ArgsType;
export const PlasmicStories__ArgProps = new Array<ArgPropType>();

export type PlasmicStories__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  pageBanerSection?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  section?: p.Flex<"section">;
  columns?: p.Flex<"div">;
  ctaBottom?: p.Flex<typeof CtaBottom>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultStoriesProps {}

export const defaultStories__Args: Partial<PlasmicStories__ArgsType> = {};

function PlasmicStories__RenderFunc(props: {
  variants: PlasmicStories__VariantsArgs;
  args: PlasmicStories__ArgsType;
  overrides: PlasmicStories__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultStories__Args, props.args);
  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsx3WpyNuTSdyZz6()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"pageBanerSection"}
            data-plasmic-override={overrides.pageBanerSection}
            className={classNames(projectcss.all, sty.pageBanerSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__xmn8B)}>
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Stories"}
              </h1>
            </div>
          </div>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__grUgL)}>
              <div className={classNames(projectcss.all, sty.freeBox___2ByaB)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__u0SAa)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"columns"}
                      data-plasmic-override={overrides.columns}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___6KePr
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper__uq174
                          )}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__jCoTv
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper__t0Omf
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__kOmiP)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/professional_services/images/girls18285391920Jpg.jpeg",
                              fullWidth: 1920,
                              fullHeight: 1280,
                              aspectRatio: undefined
                            }}
                          />
                        </CaseStudiesWraper>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__qjwG8
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper___2GsAp
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__mfz5U)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/professional_services/images/woman32879561920Jpg.jpeg",
                              fullWidth: 1920,
                              fullHeight: 1280,
                              aspectRatio: undefined
                            }}
                          />
                        </CaseStudiesWraper>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__f9Ott
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper__b33EC
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__ykfRt)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/professional_services/images/girl18484541920Jpg.jpeg",
                              fullWidth: 1920,
                              fullHeight: 1279,
                              aspectRatio: undefined
                            }}
                          />
                        </CaseStudiesWraper>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__bi7Wk
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper___6ENk
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__aJg8)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/professional_services/images/girl23664381920Jpg.jpeg",
                              fullWidth: 1920,
                              fullHeight: 1280,
                              aspectRatio: undefined
                            }}
                          />
                        </CaseStudiesWraper>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__fw2Tn
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper__qpB9L
                          )}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__qYwe6
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper__hUXw
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__ycVwT)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/professional_services/images/woman31165871920Jpg.jpeg",
                              fullWidth: 1920,
                              fullHeight: 1279,
                              aspectRatio: undefined
                            }}
                          />
                        </CaseStudiesWraper>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__kIhOu
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper__uMm4F
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img___2JyRb)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/professional_services/images/girl17750351920Jpg.jpeg",
                              fullWidth: 1920,
                              fullHeight: 1191,
                              aspectRatio: undefined
                            }}
                          />
                        </CaseStudiesWraper>
                      </div>
                    </p.Stack>
                  </p.Stack>
                ) : null}
              </div>
            </div>
          </section>

          <CtaBottom
            data-plasmic-name={"ctaBottom"}
            data-plasmic-override={overrides.ctaBottom}
            className={classNames("__wab_instance", sty.ctaBottom)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "pageBanerSection",
    "h1",
    "section",
    "columns",
    "ctaBottom",
    "footer"
  ],
  header: ["header"],
  pageBanerSection: ["pageBanerSection", "h1"],
  h1: ["h1"],
  section: ["section", "columns"],
  columns: ["columns"],
  ctaBottom: ["ctaBottom"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  pageBanerSection: "div";
  h1: "h1";
  section: "section";
  columns: "div";
  ctaBottom: typeof CtaBottom;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicStories__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicStories__VariantsArgs;
    args?: PlasmicStories__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicStories__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicStories__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicStories__ArgProps,
      internalVariantPropNames: PlasmicStories__VariantProps
    });

    return PlasmicStories__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicStories";
  } else {
    func.displayName = `PlasmicStories.${nodeName}`;
  }
  return func;
}

export const PlasmicStories = Object.assign(
  // Top-level PlasmicStories renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageBanerSection: makeNodeComponent("pageBanerSection"),
    h1: makeNodeComponent("h1"),
    section: makeNodeComponent("section"),
    columns: makeNodeComponent("columns"),
    ctaBottom: makeNodeComponent("ctaBottom"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicStories
    internalVariantProps: PlasmicStories__VariantProps,
    internalArgProps: PlasmicStories__ArgProps
  }
);

export default PlasmicStories;
/* prettier-ignore-end */
